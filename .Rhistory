knitr::opts_chunk$set(echo = TRUE)
library(factominer)
install.packages("FactoMineR")
library(FactoMineR)
install.packages("factoextra")
library(factoextra)
dataACP <- data %>% select()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(lubridate)
library(ggplot2)
library(FactoMineR)
library(factoextra)
player_info <-
read.csv("D:/DataFrame/NHL/player_info.csv",encoding = "UTF-8")
game_skater_stats <-
read.csv("D:/DataFrame/NHL/game_skater_stats.csv",encoding = "UTF-8")
#on enlève les gardiens de buts de notre étude
player_info <- player_info %>% filter(!primaryPosition == "G")
player_info$primaryPosition <- ifelse(player_info$primaryPosition =="LW" | player_info$primaryPosition =="RW","W", player_info$primaryPosition)
player_info$primaryPosition <- as.factor(player_info$primaryPosition)
player_info$nationality <- as.factor(player_info$nationality)
player_info$birthDate <- as.Date(player_info$birthDate)
player_info$shootsCatches <- as.factor(player_info$shootsCatches)
summary(player_info)
summary(game_skater_stats)
game_skater_stats <-
game_skater_stats %>%
group_by(player_id) %>%
summarise(avgGoal = mean(goals),
avgAssists = mean(assists),
avgShots = mean(shots),
avgHits = mean(hits),
avgTimeOnIce = mean(timeOnIce),
avgPenaltyMinute = mean(penaltyMinutes),
avgFaceOffWin = mean(faceOffWins),
avgBlocked = mean(blocked)
)
data <- left_join(player_info,game_skater_stats,by ="player_id")
head(data)
summary(data)
hist(data$height_cm)  #+ ggtitle("Répartition de la taille des joueurs en fonction de leur poste")
ggplot(data, aes(x = height_cm)) + geom_density(aes(color = primaryPosition))  + ggtitle("Répartition de la taille des joueurs en fonction de leur poste")
ggplot(data, aes(x = weight)) + geom_density(aes(color = primaryPosition)) + ggtitle("Répartition du poid des joueurs en fonction de leur poste")
ggplot(data, aes(x = avgGoal)) + geom_boxplot(aes(color = primaryPosition))
#Montrer que pas de diff entre W et C mais entre D et les autres
#ontrer que la taille influe pas significativement
t <- table(data$primaryPosition,data$shootsCatches)
t
khi2 <- t %>% chisq.test()
khi2$residual
ggplot(data,aes(x = weight,y = height_cm,color = primaryPosition)) + geom_point()
names(data)
dataACP <- data %>% select(height_cm,weight,avgGoal,avgAssists,avgShots,avgHits,avgTimeOnIce,avgPenaltyMinute,avgFaceOffWin,avgBlocked)
res.pca <- PCA(, graph = FALSE)
res.pca <- PCA(dataACP, graph = FALSE)
dataACP <- data %>% select(height_cm,weight,avgGoal,avgAssists,avgShots,avgHits,avgTimeOnIce,avgPenaltyMinute,avgFaceOffWin,avgBlocked)
res.pca <- PCA(dataACP, graph = FALSE)
View(res.pca)
res.pca
eig.val <- get_eigenvalue(res.pca)
eig.val
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 50))
var <- get_pca_var(res.pca)
var
fviz_pca_var(res.pca, col.var = "black")
install.packages("corrplot")
library(corrplot)
corrplot(var$cos2, is.corr=FALSE)
fviz_pca_var(res.pca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Évite le chevauchement de texte
)
fviz_pca_ind (res.pca, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Évite le chevauchement de texte
)
fviz_pca_var(res.pca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Évite le chevauchement de texte
)
fviz_pca_ind (res.pca, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Évite le chevauchement de texte
)
# Créez une variable continue aléatoire de longueur 23,
# Même longeur que le nombre d'individus actifs dans l'ACP
set.seed (123)
my.cont.var <- rnorm(23)
# Colorer les individus par la variable continue
fviz_pca_ind(res.pca, col.ind = my.cont.var,
gradient.cols = c("blue", "yellow", "red"),
legend.title = "Cont.Var")
fviz_pca_biplot(res.pca, repel = TRUE,
col.var = "#2E9FDF", # Couleur des variables
col.ind = "#696969"  # Couleur des individues
)
mcor <- cor(mtcars)
mcor
mcor <- cor(data)
dataCorr <- data %>% select(height_cm,weight,avgGoal,avgAssists,avgShots,avgHits,avgTimeOnIce,avgPenaltyMinute,avgFaceOffWin,avgBlocked)
mcor <- cor(dataCorr)
mcor
dataCorr <- dataCorr %>% filter(!is.na(dataCorr))
dataCorr <- data %>% select(height_cm,weight,avgGoal,avgAssists,avgShots,avgHits,avgTimeOnIce,avgPenaltyMinute,avgFaceOffWin,avgBlocked)
dataCorr <- dataCorr %>% filter(!is.na(dataCorr))
mcor <- cor(dataCorr)
mcor
